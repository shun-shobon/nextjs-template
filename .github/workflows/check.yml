name: Check
on:
  push:

permissions:
  contents: read

jobs:
  type-check:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Node.js
        uses: shun-shobon/actions/setup-node@master
        with:
          node-version-file: .tool-versions

      - name: Run | Lint
        run: pnpm run type-check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Node.js
        uses: shun-shobon/actions/setup-node@master
        with:
          node-version-file: .tool-versions

      - name: Run | Lint
        run: pnpm run lint:ci

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Node.js
        uses: shun-shobon/actions/setup-node@master
        with:
          node-version-file: .tool-versions

      - name: Run | Lint
        run: pnpm run format:check

  test-storybook:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Node.js
        uses: shun-shobon/actions/setup-node@master
        with:
          node-version-file: .tool-versions

      - name: Setup | Get Playwright version
        id: playwright-version
        run: |
          echo "version=$(pnpm list playwright --json | jq -r '.[].devDependencies.playwright.version')" >> $GITHUB_OUTPUT

      - name: Setup | Playwright Cache
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Setup | Install Playwright (without cache)
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps
      - name: Setup | Install playwright (with cache)
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm exec playwright install-deps

      - name: Build | Storybook
        run: pnpm run build-storybook --test

      - name: Run | Test Storybook
        run: |
          pnpm --silent dlx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "pnpm --silent dlx sirv-cli storybook-static --host 127.0.0.1 --port 6006 --quiet" \
            "pnpm --silent dlx wait-on http://127.0.0.1:6006 && pnpm test:storybook"

  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Node.js
        uses: shun-shobon/actions/setup-node@master
        with:
          node-version-file: .tool-versions

      - name: Setup | Get Playwright version
        id: playwright-version
        run: |
          echo "version=$(pnpm list playwright --json | jq -r '.[].devDependencies.playwright.version')" >> $GITHUB_OUTPUT

      - name: Setup | Playwright Cache
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Setup | Install Playwright (without cache)
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps
      - name: Setup | Install playwright (with cache)
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm exec playwright install-deps

      - name: Run | Test E2E
        run: pnpm test:e2e
